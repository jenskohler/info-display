# Security configuration for the application
security:
    # Passwords typed into the login form are automatically encrypted using the
    # configured encoders. The entity class defined here will only receive the
    # encoded password from the framework (except for the plaintext encoder which
    # does not encode anything). The passwords have to be stored in the same format.
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        HSMA\InfoDisplay\Entity\Security\User: plaintext
            # algorithm: bcrypt
            # cost: 12

    # Hierachy of roles defines which roles include other roles. In this configuration
    # the ADMIN role implies the USER, READER and WRITER role
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_READER, ROLE_WRITER]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_READER, ROLE_WRITER]

    # Providers manage users and passwords
    providers:
        fakdb_provider:
            # Provider using the OR mapper. The storage and retrieval of the
            # entity class is completely managed by the Doctrine OR-Mapper.
            entity:
                # Class representing the user (must implement UserInterface)
                class: InfoDisplayBundle:Security\User

                # Property containing the username
                property: username

        key_provider:
            # Provider using the OR mapper but API keys instead of
            # Username/Password
            entity:
                # Class representing the user (must implement UserInterface)
                class: InfoDisplayBundle:Security\User

                # Property containing the username
                property: username

    # Firewalls impose restrictions on certain URLs
    firewalls:

        # Symfony development tools should be accessed without security as
        # these tools are anyhow only available in the development context
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Secured area for API access to the data of the application
        api_access:
            # URL-Pattern for the API
            pattern: ^/api/

            # Authentication information should not be stored
            # in the session. So each request has to provide a new
            # token for authentication
            stateless: true

            # User Provider as defined above for API-Keys
            provider: key_provider

            # Key based authentication
            simple_preauth:
                authenticator: key_authenticator

        # News pages are accessible for everyone
        news_page:
            pattern:   ^/$
            anonymous: ~

        # Arbitrary name for the security configuration
        secured_area:
            # URL-Pattern
            pattern: ^/admin

            #  Generally allow anonymous access (will be restricted later on with
            # the access_control directives).
            anonymous: ~

            # User Provider as defined above
            provider: fakdb_provider

            # Use form based login
            simple_form:
                authenticator: ldap_authenticator
                login_path: /admin/login
                check_path: /admin/login_check
                always_use_default_target_path: true
                default_target_path: /admin

            # Path that will automatically lead to an logout and page that is
            # displayed after the logout was performed
            logout:
                path:   /admin/logout
                target: /admin/login

    # Acess rules for certain pathes. It is important that the /admin/login path is not
    # protected because otherwise noone can log into the application.
    #
    # !!!!ATTENTION!!!! The specific pathes must be listed FIRST
    access_control:
        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: [ ROLE_ADMIN, ROLE_WRITER ] }
        - { path: ^/admin, roles: [ ROLE_ADMIN, ROLE_WRITER ] }
        - { path: ^/api/, roles: ROLE_READER }
        - { path: ^/news, roles: IS_AUTHENTICATED_ANONYMOUSLY }

